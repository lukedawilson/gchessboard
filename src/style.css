:host {
  /* Square colors */
  --dark-square-color: #4c946a;
  --light-square-color: #e0ddcc;

  /* Square colors when in :hover state */
  --hover-dark-square-color: #3f7b58;
  --hover-light-square-color: #e3d798;

  /* Square colors when the square is marked as start of move */
  --move-start-light-square-color: #fadd4c;
  --move-start-dark-square-color: #10b756;

  /* Square highlight colors when the square is an eligible move target */
  --move-eligible-light-square-highlight-color: #000;
  --move-eligible-dark-square-highlight-color: #000;

  /* Color of outline when square has focus */
  --focus-outline-color: hsla(28deg 94% 60% / 90%);

  /* Color of outline when square is involved in a keyboard move */
  --kb-move-outline-color: hsla(146deg 58% 15% / 95%);

  /* Duration for all transitions */
  --piece-transition-duration: 200ms;

  display: inline-block;
}

/* Ensure that 'hidden' attribute is respected despite above display override. */
:host([hidden]) {
  display: none;
}

.chessboard {
  width: 100%;
  position: relative;
}

.squares {
  width: 100%;
  table-layout: fixed;
  border-collapse: collapse;

  /* Prevent native dragging caused if any of the children are "selected". */
  user-select: none;
}

.rank-label {
  position: absolute;
  top: 1%;
  left: 4%;
  pointer-events: none;
}

.file-label {
  position: absolute;
  bottom: 0%;
  right: 4%;
  pointer-events: none;
}

.label {
  /* Hide label text from every device except screenreaders. */
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: inset(50%);
  white-space: nowrap;
  pointer-events: none;
}

[data-square] {
  /* Width of table cell is implicitly 12.5% because row will have
     exactly 8 columns and `table-layout` is fixed. Padding of 12.5% * width
     ensures square aspect ratio. */
  padding: 12.5% 0 0;
  position: relative;
  font-family: sans-serif;
  font-size: 0.7rem;
  background-color: var(--p-square-color);
  color: var(--p-label-color);
}

[data-square]:focus {
  outline: none;
  box-shadow: inset 0 0 4px 4px var(--focus-outline-color);
}

[data-square].move-eligible {
  background: radial-gradient(
    var(--p-move-eligible-highlight-color) 24%,
    /* Add pixel offset to boundary to reduce jaggedness. */
      var(--p-square-color) calc(24% + 1px)
  );
}

[data-square].occupied.move-eligible {
  /* Wide circle with transparent interior if square is occupied. */
  background: radial-gradient(
    var(--p-square-color) 82%,
    var(--p-move-eligible-highlight-color) calc(82% + 1px)
  );
}

[data-square].move-start {
  --p-square-color: var(--p-move-start-square-color);
}

[data-move-state="awaiting-input"] [data-square].occupied,
[data-move-state="animating"] [data-square].occupied {
  cursor: pointer;
}

[data-move-state="touching-first-square"] [data-square],
[data-move-state="dragging"] [data-square],
[data-move-state="canceling-second-touch"] [data-square] {
  cursor: grab;
}

[data-move-state="awaiting-second-touch"] [data-square],
[data-move-state="moving-piece-kb"] [data-square] {
  cursor: pointer;
}

[data-move-state="moving-piece-kb"] [data-square].move-start:not(:focus) {
  box-shadow: inset 0 0 3px 3px var(--kb-move-outline-color);
}

[data-move-state] [data-square]:hover:not(.move-start) {
  /* Only change hover if board is interactive, i.e. has [data-move-state]. */
  --p-square-color: var(--p-hover-square-color);
}

/**************************
 * Square color overrides *
 **************************/

[data-square-color="dark"] {
  --p-square-color: var(--dark-square-color);

  /* Label colors for inline labels should be inverse of square color */
  --p-label-color: var(--light-square-color);
  --p-hover-square-color: var(--hover-dark-square-color);
  --p-move-eligible-highlight-color: var(
    --move-eligible-dark-square-highlight-color
  );
  --p-move-start-square-color: var(--move-start-dark-square-color);
}

[data-square-color="light"] {
  --p-square-color: var(--light-square-color);
  --p-label-color: var(--dark-square-color);
  --p-hover-square-color: var(--hover-light-square-color);
  --p-move-eligible-highlight-color: var(
    --move-eligible-light-square-highlight-color
  );
  --p-move-start-square-color: var(--move-start-light-square-color);
}

/****************
 * Piece styles *
 ****************/

/* Always use absolute positioning for pieces and slotted
   content (custom SVGs, custom content etc) */
[data-square] .piece,
::slotted(*) {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none;
}

[data-square] .piece {
  z-index: 10;
}

[data-square] .piece.secondary {
  z-index: 5;
}

[data-move-state="animating"] .piece {
  transition-duration: var(--piece-transition-duration);
}

[data-square].move-start .piece:not(.secondary) {
  /* Ensure that the piece appears above most other elements in document. */
  z-index: 9999;
}
