:host {
  /* Square colors */
  --square-color-dark: hsl(145deg 32% 44%);
  --square-color-light: hsl(51deg 24% 84%);

  /* Square colors when in :hover state */
  --square-color-dark-hover: hsl(144deg 75% 44%);
  --square-color-light-hover: hsl(52deg 98% 70%);

  /* Square colors when the square is actively being interacted with (moved). */
  --square-color-dark-active: hsl(142deg 77% 43%);
  --square-color-light-active: hsl(50deg 95% 64%);

  /* Color of outline when square is actively being interacted with (moved). */
  --outline-color-dark-active: hsl(138deg 85% 53% / 95%);
  --outline-color-light-active: hsl(66deg 97% 72% / 95%);

  /* Color of outline when square has focus */
  --focus-outline-color: hsl(30deg 94% 55% / 90%);

  /* Outline size properties */
  --focus-outline-blur-radius: 3px;
  --focus-outline-spread-radius: 4px;

  /* Label font properties */
  --coords-font-size: 0.7rem;
  --coords-font-family: sans-serif;

  /* padding to apply to wrapper for coordinates */
  --coords-outside-padding: 4%;

  /* Square marker colors when the square is an eligible move target */
  --move-target-marker-color-dark-square: hsl(144deg 64% 9% / 90%);
  --move-target-marker-color-light-square: hsl(144deg 64% 9% / 90%);

  /* Radius of marker on move-target square */
  --move-target-marker-radius: 24%;

  /* Radius of marker on move-target square that is occupied */
  --move-target-marker-radius-occupied: 82%;

  /* Opacity of ghost piece shown while dragging */
  --ghost-piece-opacity: 0.35;

  /* z-index of piece while dragging */
  --piece-drag-z-index: 9999;

  /* padding applied around piece. */
  --piece-padding: 3%;

  display: inline-block;
}

/* Ensure that 'hidden' attribute is respected despite above display override. */
:host([hidden]) {
  display: none;
}

.board {
  width: 100%;
  box-sizing: border-box;
  table-layout: fixed;
  border-collapse: collapse;

  /* Prevent native dragging caused if any of the children are "selected". */
  user-select: none;
  touch-action: none;
}

.wrapper.outside > .board {
  border: 1px solid var(--square-color-dark);
}

.label {
  /* Hide label text from every device except screenreaders. */
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: inset(50%);
  white-space: nowrap;
  pointer-events: none;
}

[data-square] {
  /* Width of table cell is implicitly 12.5% because row will have
     exactly 8 columns and `table-layout` is fixed. Padding of 12.5% * width
     ensures square aspect ratio. */
  padding: 12.5% 0 0;
  position: relative;
  font-family: var(--coords-font-family);
  font-size: var(--coords-font-size);
  background-color: var(--p-square-color);
  color: var(--p-label-color);
}

[data-square]:focus {
  outline: none;
  box-shadow: inset 0 0 var(--focus-outline-blur-radius)
    var(--focus-outline-spread-radius) var(--focus-outline-color);
}

.has-limited-targets [data-square].move-target {
  background: radial-gradient(
    var(--p-move-target-marker-color) var(--move-target-marker-radius),
    /* Add pixel offset to boundary to reduce jaggedness. */
      var(--p-square-color) calc(var(--move-target-marker-radius) + 1px)
  );
}

.has-limited-targets [data-square].has-piece.move-target,
.has-limited-targets [data-square].has-content.move-target {
  /* Wide circle with transparent interior if square is occupied. */
  background: radial-gradient(
    var(--p-square-color) var(--move-target-marker-radius-occupied),
    var(--p-move-target-marker-color)
      calc(var(--move-target-marker-radius-occupied) + 1px)
  );
}

[data-square].active {
  --p-square-color: var(--p-square-color-active);
}

.moving [data-square].active:not(:focus) {
  /* Add additional outline to move start square when actively moving. */
  box-shadow: inset 0 0 var(--focus-outline-blur-radius)
    var(--focus-outline-spread-radius) var(--p-outline-color-active);
}

.ready [data-square].moveable,
:not(.pointer-down) [data-square]:is(.active, .move-target) {
  cursor: pointer;
}

.pointer-down {
  cursor: grab;
}

.ready [data-square].moveable:hover,
.moving [data-square].move-target:hover,
.moving [data-square].highlighted-target {
  --p-square-color: var(--p-square-color-hover);
}

/***************
 * Coordinates *
 ****************/

.wrapper {
  position: relative;
}

.coords {
  display: none;
  position: absolute;
  pointer-events: none;
}

.wrapper.outside {
  padding: var(--coords-outside-padding);
  background-color: var(--square-color-light);
}

.wrapper.outside > .coords {
  display: block;
  fill: var(--square-color-dark);
  font-family: var(--coords-font-family);
  font-size: var(--coords-font-size);
}

.wrapper.outside > .coords.file {
  width: calc(100% - 2 * var(--coords-outside-padding));
  height: var(--coords-outside-padding);
  top: calc(100% - var(--coords-outside-padding));
  left: var(--coords-outside-padding);
  right: var(--coords-outside-padding);
}

.wrapper.outside > .coords.rank {
  width: var(--coords-outside-padding);
  height: calc(100% - 2 * var(--coords-outside-padding));
  top: var(--coords-outside-padding);
  right: calc(100% - var(--coords-outside-padding));
  bottom: var(--coords-outside-padding);
}

.wrapper.inside > .coords {
  display: block;
  font-family: var(--coords-font-family);
  font-size: var(--coords-font-size);
}

.wrapper.inside > .coords > .light {
  fill: var(--square-color-dark);
}

.wrapper.inside > .coords > .dark {
  fill: var(--square-color-light);
}

.wrapper.inside > .coords.file {
  width: 100%;
  height: 100%;
  left: 0;
  right: 0;
  bottom: 0;
}

.wrapper.inside > .coords.rank {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  bottom: 0;
}

/**************************
 * Square color overrides *
 **************************/

[data-square-color="dark"] {
  --p-square-color: var(--square-color-dark);

  /* Label colors for inline labels should be inverse of square color */
  --p-label-color: var(--square-color-light);
  --p-square-color-hover: var(--square-color-dark-hover);
  --p-move-target-marker-color: var(--move-target-marker-color-dark-square);
  --p-square-color-active: var(--square-color-dark-active);
  --p-outline-color-active: var(--outline-color-dark-active);
}

[data-square-color="light"] {
  --p-square-color: var(--square-color-light);
  --p-label-color: var(--square-color-dark);
  --p-square-color-hover: var(--square-color-light-hover);
  --p-move-target-marker-color: var(--move-target-marker-color-light-square);
  --p-square-color-active: var(--square-color-light-active);
  --p-outline-color-active: var(--outline-color-light-active);
}

/****************
 * Piece styles *
 ****************/

/* Always use absolute positioning for pieces and slotted
   content (custom SVGs, custom content etc) */
[data-square] .piece,
[data-square] .content {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none;
}

[data-square] .piece {
  z-index: 10;
  background-size: cover;
  background-repeat: no-repeat;
  box-sizing: border-box;
  padding: var(--piece-padding);

  /* Make background placement respect padding. */
  background-origin: content-box;
}

[data-square] .piece.moving {
  z-index: 15;
}

[data-square] .piece.secondary {
  z-index: 5;
  opacity: var(--ghost-piece-opacity);
}

[data-square].active .piece:not(.secondary) {
  /* Ensure that the piece appears above most other elements in document. */
  z-index: var(--piece-drag-z-index);
}

/**********
 * Pieces *
 **********/

.bb {
  background-image: url("../pieces/bb.svg");
}

.bk {
  background-image: url("../pieces/bk.svg");
}

.bn {
  background-image: url("../pieces/bn.svg");
}

.bp {
  background-image: url("../pieces/bp.svg");
}

.bq {
  background-image: url("../pieces/bq.svg");
}

.br {
  background-image: url("../pieces/br.svg");
}

.wb {
  background-image: url("../pieces/wb.svg");
}

.wk {
  background-image: url("../pieces/wk.svg");
}

.wn {
  background-image: url("../pieces/wn.svg");
}

.wp {
  background-image: url("../pieces/wp.svg");
}

.wq {
  background-image: url("../pieces/wq.svg");
}

.wr {
  background-image: url("../pieces/wr.svg");
}
