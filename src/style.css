:host {
  /* Square colors */
  --dark-square-color: hsl(145deg 32% 44%);
  --light-square-color: hsl(51deg 24% 84%);

  /* Square colors when in :hover state */
  --hover-dark-square-color: rgb(45 114 73);
  --hover-light-square-color: hsl(50deg 69% 69%);

  /* Square colors when the square is actively being interacted with (moved). */
  --active-dark-square-color: hsl(145deg 84% 39%);
  --active-light-square-color: hsl(50deg 95% 64%);

  /* Color of outline when square is marked as start of move */
  --active-dark-outline-color: hsl(138deg 85% 53% / 95%);
  --active-light-outline-color: hsl(66deg 97% 72% / 95%);

  /* Square highlight colors when the square is an eligible move target */
  --move-target-dark-square-highlight-color: hsl(0deg 0% 0%);
  --move-target-light-square-highlight-color: hsl(0deg 0% 0%);

  /* Color of outline when square has focus */
  --focus-outline-color: hsl(30deg 94% 55% / 90%);

  /* Outline size properties */
  --outline-blur-radius: 3px;
  --outline-spread-radius: 4px;

  /* Label font properties */
  --label-font-size: 0.7rem;
  --label-font-family: sans-serif;

  /* Radius of marker on move-target square */
  --move-target-marker-radius: 24%;

  /* Radius of marker on move-target square that is occupied */
  --move-target-marker-radius-occupied: 82%;

  /* Opacity of ghost piece shown while dragging */
  --ghost-piece-opacity: 0.35;

  /* z-index of piece while dragging */
  --piece-drag-z-index: 9999;

  /* padding to apply to wrapper for coordinates */
  --wrapper-padding: 4%;

  display: inline-block;
}

/* Ensure that 'hidden' attribute is respected despite above display override. */
:host([hidden]) {
  display: none;
}

.board {
  width: 100%;
  box-sizing: border-box;
  table-layout: fixed;
  border-collapse: collapse;

  /* Prevent native dragging caused if any of the children are "selected". */
  user-select: none;
  touch-action: none;
}

.wrapper.outside > .board {
  border: 1px solid var(--dark-square-color);
}

.label {
  /* Hide label text from every device except screenreaders. */
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: inset(50%);
  white-space: nowrap;
  pointer-events: none;
}

[data-square] {
  /* Width of table cell is implicitly 12.5% because row will have
     exactly 8 columns and `table-layout` is fixed. Padding of 12.5% * width
     ensures square aspect ratio. */
  padding: 12.5% 0 0;
  position: relative;
  font-family: var(--label-font-family);
  font-size: var(--label-font-size);
  background-color: var(--p-square-color);
  color: var(--p-label-color);
}

[data-square]:focus {
  outline: none;
  box-shadow: inset 0 0 var(--outline-blur-radius) var(--outline-spread-radius)
    var(--focus-outline-color);
}

[data-board-state].has-limited-targets [data-square].move-target {
  background: radial-gradient(
    var(--p-move-target-highlight-color) var(--move-target-marker-radius),
    /* Add pixel offset to boundary to reduce jaggedness. */
      var(--p-square-color) calc(var(--move-target-marker-radius) + 1px)
  );
}

[data-board-state].has-limited-targets [data-square].has-piece.move-target,
[data-board-state].has-limited-targets [data-square].has-content.move-target {
  /* Wide circle with transparent interior if square is occupied. */
  background: radial-gradient(
    var(--p-square-color) var(--move-target-marker-radius-occupied),
    var(--p-move-target-highlight-color)
      calc(var(--move-target-marker-radius-occupied) + 1px)
  );
}

[data-square].active {
  --p-square-color: var(--p-active-square-color);
}

[data-board-state].moving [data-square].active:not(:focus) {
  /* Add additional outline to move start square when actively moving. */
  box-shadow: inset 0 0 var(--outline-blur-radius) var(--outline-spread-radius)
    var(--p-active-outline-color);
}

[data-board-state="awaiting-input"] [data-square].moveable,
[data-board-state]:not(.pointer-down) [data-square]:is(.active, .move-target) {
  cursor: pointer;
}

[data-board-state].pointer-down {
  cursor: grab;
}

[data-board-state="awaiting-input"] [data-square].moveable:hover,
[data-board-state].moving [data-square].move-target:hover {
  --p-square-color: var(--p-hover-square-color);
}

/***************
 * Coordinates *
 ****************/

.wrapper {
  position: relative;
}

.coords {
  display: none;
  position: absolute;
  pointer-events: none;
}

.wrapper.outside {
  padding: var(--wrapper-padding);
  background-color: var(--light-square-color);
}

.wrapper.outside > .coords {
  display: block;
  fill: var(--dark-square-color);
  font-family: var(--label-font-family);
  font-size: var(--label-font-size);
}

.wrapper.outside > .coords.file {
  width: calc(100% - 2 * var(--wrapper-padding));
  height: var(--wrapper-padding);
  top: calc(100% - var(--wrapper-padding));
  left: var(--wrapper-padding);
  right: var(--wrapper-padding);
}

.wrapper.outside > .coords.rank {
  width: var(--wrapper-padding);
  height: calc(100% - 2 * var(--wrapper-padding));
  top: var(--wrapper-padding);
  right: calc(100% - var(--wrapper-padding));
  bottom: var(--wrapper-padding);
}

.wrapper.inside > .coords {
  display: block;
  font-family: var(--label-font-family);
  font-size: var(--label-font-size);
}

.wrapper.inside > .coords > .light {
  fill: var(--dark-square-color);
}

.wrapper.inside > .coords > .dark {
  fill: var(--light-square-color);
}

.wrapper.inside > .coords.file {
  width: 100%;
  height: 100%;
  left: 0;
  right: 0;
  bottom: 0;
}

.wrapper.inside > .coords.rank {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  bottom: 0;
}

/**************************
 * Square color overrides *
 **************************/

[data-square-color="dark"] {
  --p-square-color: var(--dark-square-color);

  /* Label colors for inline labels should be inverse of square color */
  --p-label-color: var(--light-square-color);
  --p-hover-square-color: var(--hover-dark-square-color);
  --p-move-target-highlight-color: var(
    --move-target-dark-square-highlight-color
  );
  --p-active-square-color: var(--active-dark-square-color);
  --p-active-outline-color: var(--active-dark-outline-color);
}

[data-square-color="light"] {
  --p-square-color: var(--light-square-color);
  --p-label-color: var(--dark-square-color);
  --p-hover-square-color: var(--hover-light-square-color);
  --p-move-target-highlight-color: var(
    --move-target-light-square-highlight-color
  );
  --p-active-square-color: var(--active-light-square-color);
  --p-active-outline-color: var(--active-light-outline-color);
}

/****************
 * Piece styles *
 ****************/

/* Always use absolute positioning for pieces and slotted
   content (custom SVGs, custom content etc) */
[data-square] .piece,
[data-square] .content {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  pointer-events: none;
}

[data-square] .piece {
  z-index: 10;
}

[data-square] .piece.moving {
  z-index: 15;
}

[data-square] .piece.secondary {
  z-index: 5;
  opacity: var(--ghost-piece-opacity);
}

[data-square].active .piece:not(.secondary) {
  /* Ensure that the piece appears above most other elements in document. */
  z-index: var(--piece-drag-z-index);
}
